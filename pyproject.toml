[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fabric-lakehouse-mcp-server"
version = "0.1.0"
description = "Model Context Protocol server for Microsoft Fabric Lakehouse integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Fabric Lakehouse MCP Team"}
]
keywords = ["mcp", "microsoft-fabric", "lakehouse", "data", "sql"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.2.0",
    "azure-identity>=1.15.0",
    "azure-core>=1.29.0",
    "requests>=2.31.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "click>=8.1.0",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
    "pyodbc>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "coverage>=7.3.0",
]

[project.scripts]
fabric-lakehouse-mcp = "fabric_lakehouse_mcp.main:main"

[project.urls]
Homepage = "https://github.com/your-org/fabric-lakehouse-mcp-server"
Repository = "https://github.com/your-org/fabric-lakehouse-mcp-server"
Issues = "https://github.com/your-org/fabric-lakehouse-mcp-server/issues"

[tool.setuptools.packages.find]
include = ["fabric_lakehouse_mcp*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fabric_lakehouse_mcp"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["fabric_lakehouse_mcp"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
